# Nginx dependency values
# https://artifacthub.io/packages/helm/bitnami/nginx
nginx:
  image:
    registry: ghcr.io
    repository: zlangobelz/simple-vps-deploy/nginx
    tag: latest
    pullSecrets:
      - name: ghcr-secret
  containerPorts:
    http: 80
  service:
    port: 80

# App template values
image:
  repository: ghcr.io/zlangobelz/simple-vps-deploy/php

service:
  name: php
  type: ClusterIP
  port: 9000
  labels:
    app: php
  selector:
     env: test
     language: php

deployment:
  matchLabels:
    app: php
  template:
    metadata:
      labels:
        app: php
  containerPort: 9000

replicaCount: 1

imagePullSecrets:
  - name: ghcr-secret
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
