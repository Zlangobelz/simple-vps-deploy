name: CI/CD workflow
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache/files
          key: dependencies-composer-${{ hashFiles('composer.json') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.2
          extensions: pdo
          coverage: none

      - name: Install composer dependencies
        run: composer install -q --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Check code styles
        run: composer phpcs

      - name: Run unit tests
        run: vendor/bin/phpunit --verbose

  build-nginx-image:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build -t nginx -f ./docker/nginx/Dockerfile .
      - name: Login to GHCR
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push image to GHCR
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/nginx
          VERSION=latest

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          docker tag nginx $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  build-php-image:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build -t php -f ./docker/php/Dockerfile .
      - name: Login to GHCR
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push image to GHCR
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/php
          VERSION=latest

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          docker tag php $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
#  build:
#    #todo: remove .git , .github, .gitignore and etc.
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#      - name: Copy repository contents via scp
#        uses: appleboy/scp-action@master
#        env:
#          HOST: ${{ secrets.HOST }}
#          USERNAME: ${{ secrets.USERNAME }}
#          KEY: ${{ secrets.SSHKEY }}
#          PORT: 22
#        with:
#          source: "."
#          target: "/var/www/html"
#
#      - name: Executing remote command
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          USERNAME: ${{ secrets.USERNAME }}
#          PORT: 22
#          KEY: ${{ secrets.SSHKEY }}
#          script: ls