name: CI workflow
on:
  push:
    branches:
      - 'main'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get commit sha
        run: echo "RELEASE_VERSION=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

      - uses: actions/checkout@v2
      - name: Build image
        run: docker build -t php -f ./docker/php/Dockerfile .

      - name: Login to GHCR
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to GHCR
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/php

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          docker tag php $IMAGE_ID:$RELEASE_VERSION
          docker push $IMAGE_ID:$RELEASE_VERSION
#  deploy-test:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v1
#
#      - name: Install kubectl
#        run: |
#          curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/darwin/amd64/kubectl
#          chmod +x ./kubectl
#          mkdir -p $HOME/.local/bin/kubectl
#          mv ./kubectl $HOME/.local/bin/kubectl
#
#      - name: Install helm
#        run: |
#          curl -fsSL -o helm_install.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
#          chmod +x helm_install.sh
#          ./helm_install.sh
#          rm helm_install.sh
#
#      - name: Prepare helm
#        run: ./k8s/bin/helm-deploy.sh
#
#      - name: Create Kubernetes config file
#        run: |
#          mkdir -p $HOME/.kube
#          touch $HOME/.kube/config
#          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
#          chmod go-r $HOME/.kube/config
#          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV
#
#      - name: Deploy helm chart
#        run: helm upgrade app k8s/chart --install --namespace=test --set=app.name=app --values=k8s/chart/values.yaml
